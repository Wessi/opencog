/* File automatically generated by the macro OPENCOG_ADD_ATOM_TYPES. Do not edit */
/* Touch the server before adding types. */
;
opencog::ATOM = addType(opencog::ATOM, "Atom");
opencog::NODE = addType(opencog::ATOM, "Node");
opencog::LINK = addType(opencog::ATOM, "Link");
opencog::CONCEPT_NODE = addType(opencog::NODE, "ConceptNode");
opencog::NUMBER_NODE = addType(opencog::NODE, "NumberNode");
opencog::ORDERED_LINK = addType(opencog::LINK, "OrderedLink");
opencog::UNORDERED_LINK = addType(opencog::LINK, "UnorderedLink");
opencog::SET_LINK = addType(opencog::UNORDERED_LINK, "SetLink");
opencog::LIST_LINK = addType(opencog::ORDERED_LINK, "ListLink");
opencog::MEMBER_LINK = addType(opencog::ORDERED_LINK, "MemberLink");
opencog::SUBSET_LINK = addType(opencog::ORDERED_LINK, "SubsetLink");
opencog::AND_LINK = addType(opencog::UNORDERED_LINK, "AndLink");
opencog::OR_LINK = addType(opencog::UNORDERED_LINK, "OrLink");
opencog::NOT_LINK = addType(opencog::UNORDERED_LINK, "NotLink");
opencog::SEQUENTIAL_AND_LINK = addType(opencog::ORDERED_LINK, "SequentialAndLink");
opencog::ABSENT_LINK = addType(opencog::UNORDERED_LINK, "AbsentLink");
opencog::CONTEXT_LINK = addType(opencog::ORDERED_LINK, "ContextLink");
opencog::TYPE_NODE = addType(opencog::NODE, "TypeNode");
opencog::TYPE_CHOICE = addType(opencog::OR_LINK     , "TypeChoice");
opencog::VARIABLE_NODE = addType(opencog::NODE, "VariableNode");
opencog::TYPED_VARIABLE_LINK = addType(opencog::ORDERED_LINK, "TypedVariableLink");
opencog::VARIABLE_LIST = addType(opencog::LIST_LINK, "VariableList");
opencog::QUOTE_LINK = addType(opencog::ORDERED_LINK, "QuoteLink");
opencog::LAMBDA_LINK = addType(opencog::VARIABLE_LIST, "LambdaLink");
opencog::DEFINE_LINK = addType(opencog::ORDERED_LINK, "DefineLink");
opencog::COMPOSE_LINK = addType(opencog::ORDERED_LINK, "ComposeLink");
opencog::SATISFACTION_LINK = addType(opencog::LAMBDA_LINK   , "SatisfactionLink");
opencog::BIND_LINK = addType(opencog::SATISFACTION_LINK           , "BindLink");
opencog::FORALL_LINK = addType(opencog::LAMBDA_LINK , "ForAllLink");
opencog::EXISTS_LINK = addType(opencog::LAMBDA_LINK, "ExistsLink");
opencog::AVERAGE_LINK = addType(opencog::FORALL_LINK, "AverageLink");
opencog::SATISFYING_SET_LINK = addType(opencog::UNORDERED_LINK, "SatisfyingSetLink");
opencog::SCHOLEM_LINK = addType(opencog::ORDERED_LINK, "ScholemLink");
opencog::IMPLICATION_LINK = addType(opencog::AVERAGE_LINK, "ImplicationLink");
opencog::EQUIVALENCE_LINK = addType(opencog::AVERAGE_LINK, "EquivalenceLink");
opencog::EVALUATION_LINK = addType(opencog::ORDERED_LINK, "EvaluationLink");
opencog::ASSOCIATIVE_LINK = addType(opencog::ORDERED_LINK, "AssociativeLink");
opencog::INHERITANCE_LINK = addType(opencog::ORDERED_LINK, "InheritanceLink");
opencog::SIMILARITY_LINK = addType(opencog::UNORDERED_LINK, "SimilarityLink");
opencog::ATTRACTION_LINK = addType(opencog::ORDERED_LINK, "AttractionLink");
opencog::PROCEDURE_NODE = addType(opencog::NODE, "ProcedureNode");
opencog::GROUNDED_PROCEDURE_NODE = addType(opencog::PROCEDURE_NODE, "GroundedProcedureNode");
opencog::SCHEMA_NODE = addType(opencog::PROCEDURE_NODE, "SchemaNode");
opencog::GROUNDED_SCHEMA_NODE = addType(opencog::SCHEMA_NODE, "GroundedSchemaNode");
opencog::GROUNDED_SCHEMA_NODE = addType(opencog::GROUNDED_PROCEDURE_NODE, "GroundedSchemaNode");
opencog::PREDICATE_NODE = addType(opencog::SCHEMA_NODE, "PredicateNode");
opencog::GROUNDED_PREDICATE_NODE = addType(opencog::PREDICATE_NODE, "GroundedPredicateNode");
opencog::GROUNDED_PREDICATE_NODE = addType(opencog::GROUNDED_PROCEDURE_NODE, "GroundedPredicateNode");
opencog::DEFINED_RELATIONSHIP_NODE = addType(opencog::PREDICATE_NODE , "DefinedRelationshipNode");
opencog::SCHEMA_EXECUTION_LINK = addType(opencog::INHERITANCE_LINK, "SchemaExecutionLink");
opencog::SCHEMA_EVALUATION_LINK = addType(opencog::SCHEMA_EXECUTION_LINK, "SchemaEvaluationLink");
opencog::EXECUTION_LINK = addType(opencog::ORDERED_LINK, "ExecutionLink");
opencog::EXECUTION_OUTPUT_LINK = addType(opencog::ORDERED_LINK, "ExecutionOutputLink");
opencog::ANCHOR_NODE = addType(opencog::NODE, "AnchorNode");
opencog::QUANTITY_LINK = addType(opencog::ORDERED_LINK, "QuantityLink");
opencog::PLUS_LINK = addType(opencog::UNORDERED_LINK, "PlusLink");
opencog::TIMES_LINK = addType(opencog::UNORDERED_LINK, "TimesLink");
opencog::GREATER_THAN_LINK = addType(opencog::ORDERED_LINK, "GreaterThanLink");
