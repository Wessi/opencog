/* File automatically generated by the macro OPENCOG_ADD_ATOM_TYPES. Do not edit */
/* Touch the server before adding types. */
opencog::classserver();
opencog::WORD_NODE = opencog::classserver().addType(opencog::NODE, "WordNode");
opencog::ANY_NODE = opencog::classserver().addType(opencog::NODE    , "AnyNode");
opencog::REFERENCE_LINK = opencog::classserver().addType(opencog::ORDERED_LINK, "ReferenceLink");
opencog::DOCUMENT_NODE = opencog::classserver().addType(opencog::CONCEPT_NODE, "DocumentNode");
opencog::SENTENCE_NODE = opencog::classserver().addType(opencog::CONCEPT_NODE, "SentenceNode");
opencog::SENTENCE_LINK = opencog::classserver().addType(opencog::ASSOCIATIVE_LINK, "SentenceLink");
opencog::PARSE_NODE = opencog::classserver().addType(opencog::CONCEPT_NODE, "ParseNode");
opencog::PARSE_LINK = opencog::classserver().addType(opencog::ASSOCIATIVE_LINK, "ParseLink");
opencog::WORD_INSTANCE_NODE = opencog::classserver().addType(opencog::CONCEPT_NODE, "WordInstanceNode");
opencog::WORD_INSTANCE_LINK = opencog::classserver().addType(opencog::ASSOCIATIVE_LINK, "WordInstanceLink");
opencog::SEQUENCE_LINK = opencog::classserver().addType(opencog::ASSOCIATIVE_LINK, "SequenceLink");
opencog::WORD_SEQUENCE_LINK = opencog::classserver().addType(opencog::SEQUENCE_LINK, "WordSequenceLink");
opencog::SENTENCE_SEQUENCE_LINK = opencog::classserver().addType(opencog::SEQUENCE_LINK, "SentenceSequenceLink");
opencog::DOCUMENT_SEQUENCE_LINK = opencog::classserver().addType(opencog::SEQUENCE_LINK, "DocumentSequenceLink");
opencog::FEATURE_NODE = opencog::classserver().addType(opencog::CONCEPT_NODE, "FeatureNode");
opencog::FEATURE_LINK = opencog::classserver().addType(opencog::ORDERED_LINK, "FeatureLink");
opencog::LINK_GRAMMAR_RELATIONSHIP_NODE = opencog::classserver().addType(opencog::PREDICATE_NODE   , "LinkGrammarRelationshipNode");
opencog::LINK_GRAMMAR_DISJUNCT_NODE = opencog::classserver().addType(opencog::PREDICATE_NODE       , "LinkGrammarDisjunctNode");
opencog::DEFINED_LINGUISTIC_CONCEPT_NODE = opencog::classserver().addType(opencog::FEATURE_NODE, "DefinedLinguisticConceptNode");
opencog::DEFINED_LINGUISTIC_RELATIONSHIP_NODE = opencog::classserver().addType(opencog::PREDICATE_NODE , "DefinedLinguisticRelationshipNode");
opencog::PREPOSITIONAL_RELATIONSHIP_NODE = opencog::classserver().addType(opencog::PREDICATE_NODE  , "PrepositionalRelationshipNode");
opencog::WORD_SENSE_NODE = opencog::classserver().addType(opencog::CONCEPT_NODE, "WordSenseNode");
opencog::WORD_SENSE_LINK = opencog::classserver().addType(opencog::ASSOCIATIVE_LINK, "WordSenseLink");
opencog::PART_OF_SPEECH_NODE = opencog::classserver().addType(opencog::FEATURE_NODE, "PartOfSpeechNode");
opencog::PART_OF_SPEECH_LINK = opencog::classserver().addType(opencog::FEATURE_LINK, "PartOfSpeechLink");
opencog::LEMMA_NODE = opencog::classserver().addType(opencog::CONCEPT_NODE, "LemmaNode");
opencog::LEMMA_LINK = opencog::classserver().addType(opencog::ORDERED_LINK, "LemmaLink");
opencog::HOLONYM_LINK = opencog::classserver().addType(opencog::INHERITANCE_LINK, "HolonymLink");
opencog::COSENSE_LINK = opencog::classserver().addType(opencog::UNORDERED_LINK, "CosenseLink");
opencog::SEME_NODE = opencog::classserver().addType(opencog::CONCEPT_NODE, "SemeNode");
opencog::SEMANTIC_RELATION_NODE = opencog::classserver().addType(opencog::SEME_NODE, "SemanticRelationNode");
opencog::INTERPRETATION_NODE = opencog::classserver().addType(opencog::NODE, "InterpretationNode");
opencog::INTERPRETATION_LINK = opencog::classserver().addType(opencog::LINK, "InterpretationLink");
opencog::SPECIFIC_ENTITY_NODE = opencog::classserver().addType(opencog::NODE, "SpecificEntityNode");
opencog::LG_CONNECTOR_NODE = opencog::classserver().addType(opencog::PREDICATE_NODE   , "LgConnectorNode");
opencog::LG_CONN_MULTI_NODE = opencog::classserver().addType(opencog::NODE  , "LgConnMultiNode");
opencog::LG_CONN_DIR_NODE = opencog::classserver().addType(opencog::NODE    , "LgConnDirNode");
opencog::LG_CONNECTOR = opencog::classserver().addType(opencog::LINK   , "LgConnector");
opencog::MST_CONNECTOR = opencog::classserver().addType(opencog::LINK , "MSTConnector");
opencog::LG_SEQ = opencog::classserver().addType(opencog::LIST_LINK   , "LgSeq");
opencog::LG_AND = opencog::classserver().addType(opencog::LG_SEQ      , "LgAnd");
opencog::LG_OR = opencog::classserver().addType(opencog::OR_LINK     , "LgOr");
opencog::LG_WORD_CSET = opencog::classserver().addType(opencog::LIST_LINK, "LgWordCset");
opencog::LG_LINK_INSTANCE_NODE = opencog::classserver().addType(opencog::PREDICATE_NODE, "LgLinkInstanceNode");
opencog::LG_LINK_INSTANCE_LINK = opencog::classserver().addType(opencog::LIST_LINK, "LgLinkInstanceLink");
opencog::MST_LINK_NODE = opencog::classserver().addType(opencog::PREDICATE_NODE , "MSTLinkNode");
opencog::MST_DISJUNCT_NODE = opencog::classserver().addType(opencog::PREDICATE_NODE , "MSTDisjunctNode");
