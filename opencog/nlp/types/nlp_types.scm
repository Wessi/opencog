
; DO NOT EDIT THIS FILE! This file was automatically
; generated from atom definitions in types.script by the macro OPENCOG_ADD_ATOM_TYPES
;
; This file contains basic scheme wrappers for atom creation.
;
(define-module (opencog))
(define-public WordNodeType (cog-type->int 'WordNode))
(define-public (WordNode . x)
	(apply cog-new-node (append (list WordNodeType) x)))
(define-public AnyNodeType (cog-type->int 'AnyNode))
(define-public (AnyNode . x)
	(apply cog-new-node (append (list AnyNodeType) x)))
(define-public ReferenceLinkType (cog-type->int 'ReferenceLink))
(define-public (ReferenceLink . x)
	(apply cog-new-link (append (list ReferenceLinkType) x)))
(define-public DocumentNodeType (cog-type->int 'DocumentNode))
(define-public (DocumentNode . x)
	(apply cog-new-node (append (list DocumentNodeType) x)))
(define-public SentenceNodeType (cog-type->int 'SentenceNode))
(define-public (SentenceNode . x)
	(apply cog-new-node (append (list SentenceNodeType) x)))
(define-public SentenceLinkType (cog-type->int 'SentenceLink))
(define-public (SentenceLink . x)
	(apply cog-new-link (append (list SentenceLinkType) x)))
(define-public ParseNodeType (cog-type->int 'ParseNode))
(define-public (ParseNode . x)
	(apply cog-new-node (append (list ParseNodeType) x)))
(define-public ParseLinkType (cog-type->int 'ParseLink))
(define-public (ParseLink . x)
	(apply cog-new-link (append (list ParseLinkType) x)))
(define-public WordInstanceNodeType (cog-type->int 'WordInstanceNode))
(define-public (WordInstanceNode . x)
	(apply cog-new-node (append (list WordInstanceNodeType) x)))
(define-public WordInstanceLinkType (cog-type->int 'WordInstanceLink))
(define-public (WordInstanceLink . x)
	(apply cog-new-link (append (list WordInstanceLinkType) x)))
(define-public SequenceLinkType (cog-type->int 'SequenceLink))
(define-public (SequenceLink . x)
	(apply cog-new-link (append (list SequenceLinkType) x)))
(define-public WordSequenceLinkType (cog-type->int 'WordSequenceLink))
(define-public (WordSequenceLink . x)
	(apply cog-new-link (append (list WordSequenceLinkType) x)))
(define-public SentenceSequenceLinkType (cog-type->int 'SentenceSequenceLink))
(define-public (SentenceSequenceLink . x)
	(apply cog-new-link (append (list SentenceSequenceLinkType) x)))
(define-public DocumentSequenceLinkType (cog-type->int 'DocumentSequenceLink))
(define-public (DocumentSequenceLink . x)
	(apply cog-new-link (append (list DocumentSequenceLinkType) x)))
(define-public FeatureNodeType (cog-type->int 'FeatureNode))
(define-public (FeatureNode . x)
	(apply cog-new-node (append (list FeatureNodeType) x)))
(define-public FeatureLinkType (cog-type->int 'FeatureLink))
(define-public (FeatureLink . x)
	(apply cog-new-link (append (list FeatureLinkType) x)))
(define-public LinkGrammarRelationshipNodeType (cog-type->int 'LinkGrammarRelationshipNode))
(define-public (LinkGrammarRelationshipNode . x)
	(apply cog-new-node (append (list LinkGrammarRelationshipNodeType) x)))
(define-public LinkGrammarDisjunctNodeType (cog-type->int 'LinkGrammarDisjunctNode))
(define-public (LinkGrammarDisjunctNode . x)
	(apply cog-new-node (append (list LinkGrammarDisjunctNodeType) x)))
(define-public DefinedLinguisticConceptNodeType (cog-type->int 'DefinedLinguisticConceptNode))
(define-public (DefinedLinguisticConceptNode . x)
	(apply cog-new-node (append (list DefinedLinguisticConceptNodeType) x)))
(define-public DefinedLinguisticRelationshipNodeType (cog-type->int 'DefinedLinguisticRelationshipNode))
(define-public (DefinedLinguisticRelationshipNode . x)
	(apply cog-new-node (append (list DefinedLinguisticRelationshipNodeType) x)))
(define-public PrepositionalRelationshipNodeType (cog-type->int 'PrepositionalRelationshipNode))
(define-public (PrepositionalRelationshipNode . x)
	(apply cog-new-node (append (list PrepositionalRelationshipNodeType) x)))
(define-public WordSenseNodeType (cog-type->int 'WordSenseNode))
(define-public (WordSenseNode . x)
	(apply cog-new-node (append (list WordSenseNodeType) x)))
(define-public WordSenseLinkType (cog-type->int 'WordSenseLink))
(define-public (WordSenseLink . x)
	(apply cog-new-link (append (list WordSenseLinkType) x)))
(define-public PartOfSpeechNodeType (cog-type->int 'PartOfSpeechNode))
(define-public (PartOfSpeechNode . x)
	(apply cog-new-node (append (list PartOfSpeechNodeType) x)))
(define-public PartOfSpeechLinkType (cog-type->int 'PartOfSpeechLink))
(define-public (PartOfSpeechLink . x)
	(apply cog-new-link (append (list PartOfSpeechLinkType) x)))
(define-public LemmaNodeType (cog-type->int 'LemmaNode))
(define-public (LemmaNode . x)
	(apply cog-new-node (append (list LemmaNodeType) x)))
(define-public LemmaLinkType (cog-type->int 'LemmaLink))
(define-public (LemmaLink . x)
	(apply cog-new-link (append (list LemmaLinkType) x)))
(define-public HolonymLinkType (cog-type->int 'HolonymLink))
(define-public (HolonymLink . x)
	(apply cog-new-link (append (list HolonymLinkType) x)))
(define-public CosenseLinkType (cog-type->int 'CosenseLink))
(define-public (CosenseLink . x)
	(apply cog-new-link (append (list CosenseLinkType) x)))
(define-public SemeNodeType (cog-type->int 'SemeNode))
(define-public (SemeNode . x)
	(apply cog-new-node (append (list SemeNodeType) x)))
(define-public SemanticRelationNodeType (cog-type->int 'SemanticRelationNode))
(define-public (SemanticRelationNode . x)
	(apply cog-new-node (append (list SemanticRelationNodeType) x)))
(define-public InterpretationNodeType (cog-type->int 'InterpretationNode))
(define-public (InterpretationNode . x)
	(apply cog-new-node (append (list InterpretationNodeType) x)))
(define-public InterpretationLinkType (cog-type->int 'InterpretationLink))
(define-public (InterpretationLink . x)
	(apply cog-new-link (append (list InterpretationLinkType) x)))
(define-public SpecificEntityNodeType (cog-type->int 'SpecificEntityNode))
(define-public (SpecificEntityNode . x)
	(apply cog-new-node (append (list SpecificEntityNodeType) x)))
(define-public LgConnectorNodeType (cog-type->int 'LgConnectorNode))
(define-public (LgConnectorNode . x)
	(apply cog-new-node (append (list LgConnectorNodeType) x)))
(define-public LgConnMultiNodeType (cog-type->int 'LgConnMultiNode))
(define-public (LgConnMultiNode . x)
	(apply cog-new-node (append (list LgConnMultiNodeType) x)))
(define-public LgConnDirNodeType (cog-type->int 'LgConnDirNode))
(define-public (LgConnDirNode . x)
	(apply cog-new-node (append (list LgConnDirNodeType) x)))
(define-public LgConnectorType (cog-type->int 'LgConnector))
(define-public (LgConnector . x)
	(apply cog-new-link (append (list LgConnectorType) x)))
(define-public MSTConnectorType (cog-type->int 'MSTConnector))
(define-public (MSTConnector . x)
	(apply cog-new-link (append (list MSTConnectorType) x)))
(define-public LgSeqType (cog-type->int 'LgSeq))
(define-public (LgSeq . x)
	(apply cog-new-link (append (list LgSeqType) x)))
(define-public LgAndType (cog-type->int 'LgAnd))
(define-public (LgAnd . x)
	(apply cog-new-link (append (list LgAndType) x)))
(define-public LgOrType (cog-type->int 'LgOr))
(define-public (LgOr . x)
	(apply cog-new-link (append (list LgOrType) x)))
(define-public LgWordCsetType (cog-type->int 'LgWordCset))
(define-public (LgWordCset . x)
	(apply cog-new-link (append (list LgWordCsetType) x)))
(define-public LgLinkInstanceNodeType (cog-type->int 'LgLinkInstanceNode))
(define-public (LgLinkInstanceNode . x)
	(apply cog-new-node (append (list LgLinkInstanceNodeType) x)))
(define-public LgLinkInstanceLinkType (cog-type->int 'LgLinkInstanceLink))
(define-public (LgLinkInstanceLink . x)
	(apply cog-new-link (append (list LgLinkInstanceLinkType) x)))
(define-public MSTLinkNodeType (cog-type->int 'MSTLinkNode))
(define-public (MSTLinkNode . x)
	(apply cog-new-node (append (list MSTLinkNodeType) x)))
(define-public MSTDisjunctNodeType (cog-type->int 'MSTDisjunctNode))
(define-public (MSTDisjunctNode . x)
	(apply cog-new-node (append (list MSTDisjunctNodeType) x)))
