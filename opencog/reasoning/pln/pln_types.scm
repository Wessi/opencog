
; DO NOT EDIT THIS FILE! This file was automatically
; generated from atom definitions in types.script by the macro OPENCOG_ADD_ATOM_TYPES
;
; This file contains basic scheme wrappers for atom creation.
;
(define-module (opencog))
(define-public PredictiveImplicationLinkType (cog-type->int 'PredictiveImplicationLink))
(define-public (PredictiveImplicationLink . x)
	(apply cog-new-link (append (list PredictiveImplicationLinkType) x)))
(define-public TailPredictiveImplicationLinkType (cog-type->int 'TailPredictiveImplicationLink))
(define-public (TailPredictiveImplicationLink . x)
	(apply cog-new-link (append (list TailPredictiveImplicationLinkType) x)))
(define-public PredictiveAttractionLinkType (cog-type->int 'PredictiveAttractionLink))
(define-public (PredictiveAttractionLink . x)
	(apply cog-new-link (append (list PredictiveAttractionLinkType) x)))
(define-public SimultaneousAndLinkType (cog-type->int 'SimultaneousAndLink))
(define-public (SimultaneousAndLink . x)
	(apply cog-new-link (append (list SimultaneousAndLinkType) x)))
(define-public EventualSequentialANDType (cog-type->int 'EventualSequentialAND))
(define-public (EventualSequentialAND . x)
	(apply cog-new-link (append (list EventualSequentialANDType) x)))
(define-public EventualSequentialImplicationType (cog-type->int 'EventualSequentialImplication))
(define-public (EventualSequentialImplication . x)
	(apply cog-new-link (append (list EventualSequentialImplicationType) x)))
(define-public ExtensionalSimilarityLinkType (cog-type->int 'ExtensionalSimilarityLink))
(define-public (ExtensionalSimilarityLink . x)
	(apply cog-new-link (append (list ExtensionalSimilarityLinkType) x)))
(define-public IntensionalSimilarityLinkType (cog-type->int 'IntensionalSimilarityLink))
(define-public (IntensionalSimilarityLink . x)
	(apply cog-new-link (append (list IntensionalSimilarityLinkType) x)))
(define-public IntensionalInheritanceLinkType (cog-type->int 'IntensionalInheritanceLink))
(define-public (IntensionalInheritanceLink . x)
	(apply cog-new-link (append (list IntensionalInheritanceLinkType) x)))
(define-public AtTimeLinkType (cog-type->int 'AtTimeLink))
(define-public (AtTimeLink . x)
	(apply cog-new-link (append (list AtTimeLinkType) x)))
(define-public OntologicalInheritanceLinkType (cog-type->int 'OntologicalInheritanceLink))
(define-public (OntologicalInheritanceLink . x)
	(apply cog-new-link (append (list OntologicalInheritanceLinkType) x)))
